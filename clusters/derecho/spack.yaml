# *** SLES Derecho Software Stack ***
spack:
  config:
    install_tree:
      root: '%INSTALLROOT%'
      projections:
        c: '{name}/{version}/{hash:4}'
        netcdf-c^mpi: netcdf/{version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}/{hash:4}
        netcdf-c: netcdf/{version}/packages/{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}
        netcdf-cxx4^mpi: netcdf/{^netcdf-c.version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}/{hash:4}
        netcdf-cxx4: netcdf/{^netcdf-c.version}/packages/{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}
        netcdf-fortran^mpi: netcdf/{^netcdf-c.version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}/{hash:4}
        netcdf-fortran: netcdf/{^netcdf-c.version}/packages/{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}
        ^mpi: '{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}/{hash:4}'
        ^c: '{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}'
        ^cxx: '{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}'
        ^fortran: '{name}/{version}/{compiler.name}/{compiler.version}/{hash:4}'
        all: '{name}/{version}/{hash:4}'
      padded_length: 128
    build_jobs: 4
    test_stage: '%TMPROOT%/$user/temp/spack/%DEPLOYMENT%/tests'
    source_cache: '%TMPROOT%/$user/temp/spack/cache'
    misc_cache: '%TMPROOT%/$user/temp/spack/%DEPLOYMENT%/misc'
    build_stage:
    - '%TMPROOT%/$user/temp/spack/%DEPLOYMENT%/builds'
    shared_linking:
    # Turning bind setting on would be beneficial but vendor compilers do not
    # seem to work with it! Avoid!
      type: rpath
      bind: false
  env_vars:
    set:
      NVCCFLAGS: -allow-unsupported-compiler
      NVCC_PREPEND_FLAGS: -allow-unsupported-compiler
  packages:
    adios2:
      variants:
      - +cuda
      - +hdf5
      - +python
    all:
      permissions:
        read: world
        write: user
      target:
      # This target is lowest-common denominator between Intel and Milans
      - x86_64_v3
      prefer:
      - +pic
      - spec: ^hdf5 %gcc@12.5.0
        when: '%gcc@12.5.0 ^hdf5'
      - spec: ^udunits %gcc@12.5.0
        when: '%gcc@12.5.0 ^udunits'
      - spec: ^openblas %gcc@12.5.0
        when: '%gcc@12.5.0 ^openblas'
      require:
      - spec: cuda_arch=80
        when: ^cuda
    antlr:
      prefer:
      - '%gcc@12.5.0'
    aocc:
      require:
      - +license-agreed
    apptainer:
      prefer:
      - '%gcc@12.5.0'
    arpack-ng:
      variants:
      - ~mpi
    arrow:
      prefer:
      - '%gcc@12.5.0'
    assimp:
      prefer:
      - '%gcc@12.5.0'
    automake:
      prefer:
      - '%gcc@12.5.0'
    bash:
      prefer:
      - '%gcc@12.5.0'
    berkeley-db:
      prefer:
      - '%gcc@12.5.0'
    bison:
      prefer:
      - '%gcc@12.5.0'
    bzip2:
      prefer:
      - '%gcc@12.5.0'
    c-blosc:
      prefer:
      - '%gcc@12.5.0'
    cairo:
      variants:
      - +X
      - +fc
      - +ft
      - +gobject
      - +pdf
      - +png
      - +svg
      - +zlib
      prefer:
      - '%gcc@12.5.0'
    cdo:
      variants:
      - +curl
      prefer:
      - '%gcc@12.5.0'
      - ^udunits %gcc@12.5.0
    charliecloud:
      prefer:
      - '%gcc@12.5.0'
    cmake:
      variants:
      - +ownlibs
      prefer:
      - '%gcc@12.5.0'
    cmor:
      prefer:
      - '%gcc@12.5.0'
      - ^udunits %gcc@12.5.0
    cp2k:
      variants:
      - +elpa
      - +libvori
      - +plumed
      - +spglib
    cray-libsci:
      externals:
      - spec: cray-libsci@25.03.0 %cce
        prefix: /opt/cray/pe/libsci/25.03.0/CRAY/17.0/x86_64
      - spec: cray-libsci@25.03.0 %gcc
        prefix: /opt/cray/pe/libsci/25.03.0/GNU/12.3/x86_64
      - spec: cray-libsci@25.03.0 %nvhpc
        prefix: /opt/cray/pe/libsci/25.03.0/NVIDIA/23.3/x86_64
      - spec: cray-libsci@25.03.0 %intel-oneapi-compilers
        prefix: /opt/cray/pe/libsci/25.03.0/INTEL/2025.0/x86_64
      buildable: false
    cray-mpich:
      externals:
      - spec: cray-mpich@8.1.32 %gcc
        prefix: /opt/cray/pe/mpich/8.1.32/ofi/gnu/12.3
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@8.1.32 %cce
        prefix: /opt/cray/pe/mpich/8.1.32/ofi/cray/17.0
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@8.1.32 %nvhpc
        prefix: /opt/cray/pe/mpich/8.1.32/ofi/nvidia/23.3
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@8.1.32 %intel-oneapi-compilers
        prefix: /opt/cray/pe/mpich/8.1.32/ofi/intel/2022.1
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@9.0.0 %gcc
        prefix: /opt/cray/pe/mpich/9.0.0/ofi/gnu/12.3
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@9.0.0 %cce
        prefix: /opt/cray/pe/mpich/9.0.0/ofi/cray/17.0
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@9.0.0 %nvhpc
        prefix: /opt/cray/pe/mpich/9.0.0/ofi/nvidia/23.3
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      - spec: cray-mpich@9.0.0 %intel-oneapi-compilers
        prefix: /opt/cray/pe/mpich/9.0.0/ofi/intel/2022.1
        extra_attributes:
          environment:
            append_path:
              LD_LIBRARY_PATH: /opt/cray/libfabric/1.22.0/lib64
      prefer:
      - +cuda
      - cuda_arch=80
      buildable: false
    cuda:
      require:
      - +allow-unsupported-compilers
      variants:
      - +dev
    curl:
      variants:
      - +libidn2
      - +libssh
      - +libssh2
      - +nghttp2
      prefer:
      - tls=openssl
      - '%gcc@12.5.0'
    darshan-runtime:
      variants:
      - +parallel-netcdf
      - scheduler=pbs
      require:
      - spec: ^hdf5+mpi
        when: +hdf5
      prefer:
      - spec: cflags='-std=gnu17 -Wno-error=implicit-function-declaration -Wno-error=int-conversion'
        when: '%gcc@15'
    darshan-util:
      variants:
      - +bzip2
      prefer:
      - '%gcc@12.5.0'
    dbus:
      prefer:
      - '%gcc@12.5.0'
    diffutils:
      prefer:
      - '%gcc@12.5.0'
    doxygen:
      variants:
      - +graphviz
    eccodes:
      variants:
      - +fortran
      - +png
      - +tools
      - jp2k=jasper
      require:
      - +netcdf
    ecflow:
      require:
      - +pic
      - +ui
      prefer:
      - '%gcc@12.5.0'
    eigen:
      prefer:
      - '%gcc@12.5.0'
    emacs:
      variants:
      - +X
      - +json
      - +treesitter
      prefer:
      - gui=x11
      - '%gcc@12.5.0'
    esmf:
      variants:
      - ~mpi
      - ~xerces
      require:
      - +external-lapack
      - +external-parallelio
      - +netcdf
      - one_of:
        - +pnetcdf +mpi
        - ~pnetcdf ~mpi
    expat:
      prefer:
      - '%gcc@12.5.0'
    ffmpeg:
      variants:
      - +X
      - +drawtext
      - +libaom
      - +libmp3lame
      - +libopenjpeg
      - +libopus
      - +libsnappy
      - +libspeex
      - +libssh
      - +libvorbis
      - +libvpx
      - +libwebp
      - +libx264
      - +libxml2
      - +libzma
      - +libzmq
      - +sdl2
    fftw:
      variants:
      - ~mpi
    findutils:
      prefer:
      - '%gcc@12.5.0'
    flatbuffers:
      prefer:
      - '%gcc@12.5.0'
    flex:
      prefer:
      - '%gcc@12.5.0'
    gawk:
      prefer:
      - '%gcc@12.5.0'
    gcc:
      prefer:
      - spec: '%gcc@7.5.0'
        when: '@:12'
      - spec: '%gcc@12.5.0'
        when: '@13:'
      variants:
      - +piclibs
      - languages=c,c++,fortran,go
    gdal:
      require:
      - spec: ^hdf5~mpi
        when: +hdf5
      variants:
      - +blosc
      - +curl
      - +deflate
      - +expat
      - +geos
      - +gif
      - +grib
      - +hdf5
      - +iconv
      - +jpeg
      - +libaec
      - +libcsf
      - +liblzma
      - +libxml2
      - +lz4
      - +netcdf
      - +openjpeg
      - +parquet
      - +pcidsk
      - +pdfium
      - +png
      - +qhull
      - +sqlite3
      - +webp
      - +zstd
      - ~hdf4
    gdb:
      variants:
      - +gold
      - +ld
      - +lto
      - +source-highlight
      - +tui
      - ~debuginfod
      - ~python
      prefer:
      - '%gcc@12.5.0'
    gdbm:
      prefer:
      - '%gcc@12.5.0'
    gettext:
      prefer:
      - '%gcc@12.5.0'
      - spec: +libxml2
        when: '%gcc@8:'
    git:
      variants:
      - +svn
      - +tcltk
      prefer:
      - '%gcc@12.5.0'
    glx:
      require:
      - mesa
    gmake:
      variants:
      - ~guile
      require:
      # This may help ioapi build
      - '@:4.2'
      prefer:
      - '%gcc@12.5.0'
    gmp:
      prefer:
      - '%gcc@12.5.0'
    gmt:
      variants:
      - +ffmpeg
      - +fftw
      - +geos
      - +ghostscript
      - +glib
      - +pcre
      require:
      - +blas
      - +lapack
      - spec: '^ffmpeg@7:'
        when: +ffmpeg
      prefer:
      - '%gcc@12.5.0'
    gnuplot:
      variants:
      - +X
      - +wx
      prefer:
      - +qt
      - '%gcc@12.5.0'
    gnutls:
      prefer:
      - '%gcc@12.5.0'
    go:
      prefer:
      - '%gcc@12.5.0'
    googletest:
      prefer:
      - '%gcc@12.5.0'
    gptl:
      variants:
      - +nestedomp
      - +papi
      - +pmpi
      prefer:
      - spec: cflags='-std=gnu17 -Wno-error=implicit-function-declaration -Wno-error=int-conversion'
        when: '%gcc@15'
    grads:
      require:
      - +dap
      - +hdf4
    graphite2:
      prefer:
      - '%gcc@12.5.0'
    grep:
      prefer:
      - '%gcc@12.5.0'
    grib-util:
      prefer:
      - '%gcc@12.5.0'
    gtkplus:
      prefer:
      - '%gcc@12.5.0'
    gzip:
      prefer:
      - '%gcc@12.5.0'
    h5z-ftp:
      require:
      - ^hdf5~mpi
    harfbuzz:
      variants:
      - +graphite2
      prefer:
      - '%gcc@12.5.0'
    hdf:
      variants:
      - +fortran
      - +szip
      require:
      - +external-xdr
      prefer:
      - spec: cflags='-std=c90 -Wno-error=int-conversion'
        when: '%gcc@15'
      - spec: cflags='-std=c90 -Wno-error=int-conversion'
        when: '%cce'
      - spec: cflags='-std=c90 -Wno-error=int-conversion'
        when: '%intel-oneapi-compilers'
    hdf5:
      variants:
      - +cxx
      - +fortran
      - +hl
      - +map
      - +szip
      - ~mpi
    heaptrack:
      prefer:
      - '%gcc@12.5.0'
    help2man:
      prefer:
      - '%gcc@12.5.0'
    hwloc:
      variants:
      - +cuda
      - +nvml
    imagemagick:
      variants:
      - +ghostscript
    intel-oneapi-advisor:
      prefer:
      - '%gcc@12.5.0'
    intel-oneapi-compilers:
      variants:
      - +nvidia
      prefer:
      - '%gcc@12.5.0'
    intel-oneapi-mkl:
      require:
      - spec: +gfortran threads=openmp
        when: '%gcc'
    intel-oneapi-mpi:
      variants:
      - +external-libfabric
      - +generic-names
    intel-oneapi-runtime:
      prefer:
      - ^gcc-runtime@12.5.0
    intel-oneapi-vtune:
      prefer:
      - '%gcc@12.5.0'
    ip:
      prefer:
      - '%lapack=openblas'
    ispc:
      require:
      - '%clang'
    jasper:
      prefer:
      - '@:2'
      - '%gcc@12.5.0'
    jq:
      prefer:
      - '%gcc@12.5.0'
    json-c:
      prefer:
      - '%gcc@12.5.0'
    kokkos:
      variants:
      - +examples
      - ~openmp
      require:
      - spec: +cuda +wrapper ~alloc_async
        when: '%gcc'
      - spec: +cuda +wrapper ~alloc_async
        when: '%nvhpc'
      - spec: ^cmake@3.27
        when: '@:4.2.01 +cuda'
    krb5:
      prefer:
      - '%gcc@12.5.0'
    lcov:
      prefer:
      - '%gcc@12.5.0'
    lerc:
      prefer:
      - '%gcc@12.5.0'
    libarchive:
      require:
      - compression=bz2lib,lz4,lzma,lzo2,zlib,zstd xar=expat
    libcap:
      prefer:
      - '%gcc@12.5.0'
    libcerf:
      prefer:
      - '%gcc@12.5.0'
    libcxi:
      variants:
      - +cuda
    libdeflate:
      prefer:
      - '%gcc@12.5.0'
    libepoxy:
      prefer:
      - '%gcc@12.5.0'
    libevent:
      prefer:
      - '%gcc@12.5.0'
    libfabric:
      variants:
      - +cuda
      - +uring
      - fabrics=sockets,tcp,udp,cxi,rxm,rxd,mrail,shm,lnx
      prefer:
      - spec: '%gcc@12.5.0'
        when: '@2:'
      - spec: '%gcc@7.5.0'
        when: '@1'
    libffi:
      prefer:
      - '%gcc@12.5.0'
    libfuse:
      prefer:
      - '%gcc@12.5.0'
    libgd:
      prefer:
      - '%gcc@12.5.0'
    libgeotiff:
      require:
      # Doesn't build without proj as a dependency for me
      - +proj
      prefer:
      - '%gcc@12.5.0'
    libibn2:
      prefer:
      - '%gcc@12.5.0'
    libiconv:
      prefer:
      - '%gcc@12.5.0'
    libjpeg:
      prefer:
      - '%gcc@12.5.0'
    libjpeg-turbo:
      prefer:
      - '%gcc@12.5.0'
    libllvm:
      conflict:
      - llvm-amdgpu
    libpng:
      prefer:
      - '%gcc@12.5.0'
    librsvg:
      prefer:
      - '%gcc@12.5.0'
    libseccomp:
      prefer:
      - '%gcc@12.5.0'
    libsigsegv:
      prefer:
      - '%gcc@12.5.0'
    libslirp:
      prefer:
      - '%gcc@12.5.0'
    libssh2:
      prefer:
      - '%gcc@12.5.0'
    libszip:
      prefer:
      - '%gcc@12.5.0'
    libtiff:
      prefer:
      - '%gcc@12.5.0'
    libtirpc:
      prefer:
      - '%gcc@12.5.0'
    libtool:
      prefer:
      - '%gcc@12.5.0'
    libtree:
      prefer:
      - '%gcc@12.5.0'
    libunwind:
      variants:
      - +cxx_exceptions
      - +debug_frame
      - +xz
      - +zlib
      - components=setjmp,ptrace,coredump
    libuv:
      prefer:
      - '%gcc@12.5.0'
    libwebp:
      prefer:
      - '%gcc@12.5.0'
    libx11:
      prefer:
      - '%gcc@12.5.0'
    libxcrypt:
      prefer:
      - '%gcc@12.5.0'
    libxft:
      prefer:
      - '%gcc@12.5.0'
    libyaml:
      prefer:
      - '%gcc@12.5.0'
    linaro-forge:
      require:
      - +accept-eula
    lmod:
      prefer:
      - '%gcc@12.5.0'
    lua:
      prefer:
      - '%gcc@12.5.0'
    lz4:
      prefer:
      - '%gcc@12.5.0'
    lzo:
      prefer:
      - '%gcc@12.5.0'
    m4:
      prefer:
      - '%gcc@12.5.0'
    madis:
      prefer:
      - '%gcc@12.5.0'
    mesa:
      require:
      - +llvm
      - '@25:'
      prefer:
      - ^llvm ~clang
    met:
      variants:
      - +graphics
      - +grib2
      - +lidar2nc
      - +modis
      - +python
    metplus:
      variants:
      - +cycloneplotter
      - +makeplots
      - +plotdataplane
      - +series_analysis
    motif:
      prefer:
      - '%gcc@12.5.0'
    mpc:
      prefer:
      - '%gcc@12.5.0'
    mpfr:
      prefer:
      - '%gcc@12.5.0'
    mpi:
      prefer:
      - cray-mpich
    mpich:
      variants:
      - +cuda
      require:
      - device=ch4
      - netmod=ofi
      - pmi=pmi2
      - +vci
      - +xpmem
    mpifileutils:
      variants:
      - +gpfs
      - +lustre
      - +xattr
    muparser:
      prefer:
      - '%gcc@12.5.0'
    musica:
      variants:
      - ~tuvx
    mvapich:
      variants:
      - file_systems=lustre,gpfs,nfs,ufs
      - process_managers=auto
      require:
      - netmod=ofi
      - spec: ~cuda
        when: '%intel-oneapi-compilers'
      - spec: +cuda
        when: '%nvhpc'
    nano:
      prefer:
      - '%gcc@12.5.0'
    nasm:
      prefer:
      - '%gcc@12.5.0'
    nccmp:
      prefer:
      - '%gcc@12.5.0'
    ncl:
      variants:
      - +eemd
      - +gdal
      - +grib
      - +hdf-eos2
      - +hdf-eos5
      - +hdf4
    nco:
      prefer:
      - '%gcc@12.5.0'
      - ^udunits %gcc@12.5.0
    ncurses:
      prefer:
      - '%gcc@12.5.0'
    ncview:
      prefer:
      - '%gcc@12.5.0'
      - ^udunits %gcc@12.5.0
    ncvis:
      require:
      - ^netcdf-c build_system=autotools
      prefer:
      - '%gcc@12.5.0'
    neovim:
      prefer:
      - '%gcc@12.5.0'
    netcdf:
      variants:
      - +dap
      - ~mpi
    netcdf-c:
      variants:
      - +dap
      - +nczarr_zip
      - ~mpi
      prefer:
      # Would do require, but ncvis barfs
      - build_system=cmake
    nghttp2:
      prefer:
      - '%gcc@12.5.0'
    ninja:
      prefer:
      - '%gcc@12.5.0'
    nvhpc:
      require:
      - +blas
      - +lapack
      - ~mpi
      prefer:
      - '%gcc@12.5.0'
    octave:
      variants:
      - +arpack
      - +curl
      - +fftw
      - +fltk
      - +fontconfig
      - +freetype
      - +gl2ps
      - +glpk
      - +gnuplot
      - +hdf5
      - +llvm
      - +magick
      - +opengl
      - +qhull
      - +qrupdate
      - +qscintilla
      - +qt
      - +suitesparse
      - +zlib
    openblas:
      variants:
      - +fortran
      - threads=openmp
    openjpeg:
      prefer:
      - '%gcc@12.5.0'
    openmpi:
      require:
      - fabrics=cma,ofi
      - schedulers=tm
      - +gpfs
      - +lustre
      - +internal-pmix
      - +cuda
      - +romio
      - romio-filesystem=nfs,gpfs,lustre,ufs
      - spec: ^libfabric fabrics=cxi,lnx,mrail,rxd,rxm,shm,sockets,tcp,udp
    openpbs:
      externals:
      - spec: openpbs@2021.1.3
        prefix: /opt/pbs
      buildable: false
    openssh:
      prefer:
      - '%gcc@12.5.0'
    openssl:
      require:
      - certs=system
    osu-micro-benchmarks:
      variants:
      - +cuda
      prefer:
      - spec: ~cuda
        when: '%gcc@15'
    pandoc:
      require:
      - +texlive
    pango:
      variants:
      - +X
      prefer:
      - '%gcc@12.5.0'
    parallel-netcdf:
      variants:
      - +examples
      prefer:
      - spec: cflags='-std=c17 -Wno-error=incompatible-pointer-types -Wno-error=implicit-function-declaration -Wno-error=int-conversion'
        when: '%gcc@15'
    parallelio:
      variants:
      - +ncint
      - +pnetcdf
      - ~logging
      require:
      - +fortran
      - spec: ~pnetcdf
        when: ~mpi
    parallelio1:
      variants:
      - +pnetcdf
    pcre:
      prefer:
      - '%gcc@12.5.0'
    pcre2:
      prefer:
      - '%gcc@12.5.0'
    peak-memusage:
      prefer:
      - '%gcc@12.5.0'
    perl:
      prefer:
      - '%gcc@12.5.0'
    pkgconfig:
      prefer:
      - pkg-config
    podman:
      prefer:
      - '%gcc@12.5.0'
    py-cython:
      prefer:
      - '%gcc@12.5.0'
    py-netcdf4:
      variants:
      - ~mpi
    py-numpy:
      require:
      - '%blas=openblas'
    python:
      prefer:
      - spec: '@3.11'
      - '%gcc@12.5.0'
      - +ssl
    qhull:
      prefer:
      - '%gcc@12.5.0'
    qt:
      variants:
      - +dbus
      - +examples
      - +opengl
      - +webkit
      require:
      - +gtk
      - +ssl
      - '@5.14.2'
      prefer:
      - '%gcc@12.5.0'
    rapidjson:
      prefer:
      - '%gcc@12.5.0'
    readline:
      prefer:
      - '%gcc@12.5.0'
    ripgrep:
      prefer:
      - '%gcc@12.5.0'
    ruby:
      prefer:
      - '%gcc@12.5.0'
    rust:
      prefer:
      - '%gcc@12.5.0'
    sed:
      prefer:
      - '%gcc@12.5.0'
    singularityce:
      variants:
      - ~suid
    slirp4netns:
      prefer:
      - '%gcc@12.5.0'
    snappy:
      require:
      # Required for arrow, which is needed for parquet support in GDAL
      - ~shared
    source-highlight:
      prefer:
      - '%gcc@12.5.0'
    sqlite:
      prefer:
      - '%gcc@12.5.0'
    squashfs:
      prefer:
      - '%gcc@12.5.0'
    squashfuse:
      prefer:
      - '%gcc@12.5.0'
    superlu-dist:
      variants:
      - +openmp
      prefer:
      - spec: cflags='-std=gnu17 -Wno-error=implicit-function-declaration -Wno-error=int-conversion'
        when: '%gcc@15'
    szip:
      prefer:
      - libszip
    tbb:
      prefer:
      - intel-oneapi-tbb
    tcl:
      prefer:
      - '%gcc@12.5.0'
    texinfo:
      prefer:
      - '%gcc@12.5.0'
    tk:
      prefer:
      - '%gcc@12.5.0'
    tmux:
      prefer:
      - '%gcc@12.5.0'
    tree:
      prefer:
      - '%gcc@12.5.0'
    unzip:
      prefer:
      - '%gcc@12.5.0'
    vim:
      variants:
      - +cscope
      - +lua
      - +perl
      - +python
      - +ruby
      - +x
      - features=huge
      prefer:
      - '%gcc@12.5.0'
      require:
      - +gui
      - +gtk
    wgrib2:
      variants:
      - +ipolates
      - +netcdf
      - +proj4
      - +udf
      - ~netcdf3
      prefer:
      - '%gcc@12.5.0'
    wxwidgets:
      variants:
      - +opengl
    xnedit:
      require:
      # Wont build without this, actually!
      - +motif
      prefer:
      - '%gcc@12.5.0'
    xsimd:
      prefer:
      - '%gcc@12.5.0'
    xxdiff:
      prefer:
      - '%gcc@12.5.0'
    xz:
      prefer:
      - '%gcc@12.5.0'
    zfp:
      variants:
      - +tight-error
      - round=first
    zlib:
      prefer:
      - '%gcc@12.5.0'
    zlib-api:
      prefer:
      - zlib-ng
    zlib-ng:
      require:
      - +compat
      - +new_strategies
      - +shared
      prefer:
      - '%gcc@12.5.0'
    zstd:
      variants:
      - +programs
      prefer:
      - '%gcc@12.5.0'
      - compression=lz4,lzma,zlib
  view:
    baseenv:
      root: '%BASEROOT%/view'
      select:
      - git
      link_type: symlink
      link: roots
  modules:
    'default:':
      roots:
        lmod: '%MODULESROOT%'
      arch_folder: false
      prefix_inspections:
        bin:
        - PATH
        lib:
        - NCAR_LDFLAGS_{name}
        lib64:
        - NCAR_LDFLAGS_{name}64
        include:
        - NCAR_INC_{name}
        man:
        - MANPATH
        share/man:
        - MANPATH
        lib/pkgconfig:
        - PKG_CONFIG_PATH
        lib64/pkgconfig:
        - PKG_CONFIG_PATH
      lmod:
        adios2:
          environment:
            set:
              ADIOS2: '{prefix}'
        all:
          environment:
            set:
              NCAR_ROOT_{name}: '{prefix}'
              NCAR_SPACK_HASH_{name}: '{hash}'
          template: ncar_default.lua
        apptainer:
          environment:
            prepend_path:
              PATH: '{^squashfs.prefix}/bin'
          filter:
            exclude_env_vars:
            - GOPATH
        cdo:
          autoload: none
        chapel:
          template: chapel.lua
          environment:
            set:
              CHPL_HOME: '{prefix}'
              CHPL_LAUNCHER: pals
              CHPL_MODULE_HOME: '{prefix}'
            prepend_path:
              PATH: '{prefix.bin}/hpe-cray-ex-x86_64'
        charliecloud:
          environment:
            prepend_path:
              PATH: %BASEROOT%/wrappers/{name}/{version}/{hash:4}/bin
        core_compilers:
        - gcc@12.5.0
        core_specs:
        - cce
        - intel-oneapi-mkl
        - intel-oneapi-advisor
        - intel-oneapi-vtune
        - heaptrack
        - libfabric
        - cmor
        - nco
        - cdo
        - nccmp
        - ncview
        - madis
        - ncvis
        - lcov
        - neovim
        - eigen
        - grib-util
        - ecflow
        - darshan-util
        - linaro-forge
        - cudnn
        - cuda
        - charliecloud
        - peak-memusage
        - podman
        - pcre
        - apptainer
        - go
        - meson
        - cmake
        - intel-oneapi-compilers
        - nvhpc
        - gcc
        - wgrib2
        - miniconda3
        - rstudio
        - idl
        - matlab
        - texlive
        - gmt
        - cray-libsci
        - libtorch
        - grads
        - julia
        - ncl
        - r
        - miniconda
        cuda:
          template: ncar_cuda.lua
          environment:
            set:
              CRAYPE_LINK_TYPE: dynamic
              CRAY_ACCEL_TARGET: nvidia80
              CRAY_ACCEL_VENDOR: nvidia
              CRAY_CUDATOOLKIT_DIR: '{prefix}'
              CRAY_CUDATOOLKIT_PREFIX: '{prefix}'
              CRAY_CUDATOOLKIT_VERSION: '{version}'
              CRAY_TCMALLOC_MEMFS_FORCE: '1'
              CUDATOOLKIT_HOME: '{prefix}'
              CUDA_VERSION: '{version}'
              NCAR_LIBS_CRAYGTL: -lcuda -lcudart -lstdc++
              NVHPC_CUDA_HOME: '{prefix}'
            prepend_path:
              CRAY_LD_LIBRARY_PATH: '{prefix}/lib64'
              LD_LIBRARY_PATH: '{prefix}/lib64:{prefix}/nvvm/lib64:{prefix}/extras/CUPTI/lib64:{prefix}/extras/Debugger/lib64'
        cudnn:
          environment:
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/lib'
        cutensor:
          template: ncar_requires_cuda.lua
          filter:
            exclude_env_vars:
            - NCAR_LDFLAGS_CUTENSOR
          environment:
            set:
              NCAR_LDFLAGS_CUTENSOR_CUDA: '{prefix}/lib/" .. os.getenv("CUDA_MAJOR_VERSION") .."'
        darshan-runtime:
          autoload: none
          environment:
            set:
              DARSHAN_LOG_DIR_PATH: /glade/u/home/"..os.getenv("USER").."
              DARSHAN_MOD_DISABLE: LUSTRE
              DARSHAN_SHARED_LIB: '{prefix}/lib/libdarshan.so'
        defaults:
        - netcdf@4.9.3
        - nvhpc@25.09
        - parallelio+mpi+shared@2.6.6
        - esmf+mpi
        - cuda@12.9.0
        - cudnn@9.8.0.87-12
        - intel-oneapi-compilers@2024.2.1
        - libfabric@1.22.0
        esmf:
          autoload: none
        exclude:
        - lmod
        exclude_implicits: true
        fftw+mpi:
          template: conflict-mpi.lua
        fftw~mpi:
          template: conflict-serial.lua
        gcc:
          environment:
            set:
              GNU_PATH: '{prefix}'
              GNU_VERSION: '{version}'
              NCAR_BUILD_ENV: derecho-{name}-{version}
              NCAR_BUILD_ENV_COMPILER: derecho-{name}-{version}
              NCAR_ID_COMPILER: '{name}-{version}'
              NCAR_ROOT_COMPILER: '{prefix}'
              PE_ENV: GNU
        hash_length: 0
        hdf5+mpi:
          template: conflict-mpi.lua
        hdf5~mpi:
          template: conflict-serial.lua
        hierarchy:
        - mpi
        include:
        - cuda %gcc@12.5.0
        intel-oneapi-advisor:
          filter:
            exclude_env_vars:
            - NCAR_ROOT_INTEL_ONEAPI_ADVISOR
            - NCAR_SPACK_HASH_INTEL_ONEAPI_ADVISOR
          environment:
            set:
              NCAR_ROOT_INTEL_ADVISOR: '{prefix}'
              NCAR_SPACK_HASH_INTEL_ADVISOR: '{hash}'
        intel-oneapi-compilers:
          template: ncar_intel.lua
          filter:
            exclude_env_vars:
            - NCAR_ROOT_INTEL_ONEAPI_COMPILERS
            - NCAR_SPACK_HASH_INTEL_ONEAPI_COMPILERS
          environment:
            set:
              INTEL_COMPILER_TYPE: ONEAPI
              INTEL_PATH: '{prefix}'
              INTEL_VERSION: '{version}'
              I_MPI_CC: icx
              I_MPI_CXX: icpx
              I_MPI_F77: ifx
              I_MPI_F90: ifx
              I_MPI_FC: ifx
              NCAR_BUILD_ENV: derecho-intel-{version}
              NCAR_BUILD_ENV_COMPILER: derecho-intel-{version}
              NCAR_ID_COMPILER: intel-{version}
              NCAR_ROOT_COMPILER: '{prefix}'
              NCAR_ROOT_INTEL: '{prefix}'
              NCAR_SPACK_HASH_INTEL: '{hash}'
              OMPI_CC: icx
              OMPI_CXX: icpx
              OMPI_F77: ifx
              OMPI_FC: ifx
              PE_ENV: INTEL
        intel-oneapi-inspector:
          filter:
            exclude_env_vars:
            - NCAR_ROOT_INTEL_ONEAPI_INSPECTOR
            - NCAR_SPACK_HASH_INTEL_ONEAPI_INSPECTOR
          environment:
            set:
              NCAR_ROOT_INTEL_INSPECTOR: '{prefix}'
              NCAR_SPACK_HASH_INTEL_INSPECTOR: '{hash}'
        intel-oneapi-mkl:
          template: ncar_math.lua
          filter:
            exclude_env_vars:
            - NCAR_LDFLAGS_INTEL_ONEAPI_MKL
            - NCAR_ROOT_INTEL_ONEAPI_MKL
            - NCAR_SPACK_HASH_INTEL_ONEAPI_MKL
          environment:
            set:
              NCAR_LDFLAGS_MKL: '{prefix}/mkl/{version}/lib/intel64'
              NCAR_ROOT_MKL: '{prefix}/mkl/{version}'
              NCAR_SPACK_HASH_MKL: '{hash}'
        intel-oneapi-mpi:
          filter:
            exclude_env_vars:
            - NCAR_ROOT_INTEL_ONEAPI_MPI
            - NCAR_SPACK_HASH_INTEL_ONEAPI_MPI
          environment:
            set:
              I_MPI_HYDRA_BOOTSTRAP: rsh
              I_MPI_HYDRA_BOOTSTRAP_EXEC: pbs_tmrsh
              I_MPI_OFI_PROVIDER: cxi
              NCAR_ROOT_INTEL_MPI: '{prefix}'
              NCAR_SPACK_HASH_INTEL_MPI: '{hash}'
        intel-oneapi-vtune:
          filter:
            exclude_env_vars:
            - NCAR_ROOT_INTEL_ONEAPI_VTUNE
            - NCAR_SPACK_HASH_INTEL_ONEAPI_VTUNE
          environment:
            set:
              NCAR_ROOT_INTEL_VTUNE: '{prefix}'
              NCAR_SPACK_HASH_INTEL_VTUNE: '{hash}'
            append_path:
              LD_LIBRARY_PATH: '{prefix}/vtune/latest/lib64'
        kokkos:
          environment:
            set:
              Kokkos_ROOT: '{prefix}'
        lcov:
          environment:
            prepend_path:
              PATH: %BASEROOT%/wrappers/{name}/{version}/{hash:4}/bin
        libfabric:
          environment:
            set:
              FI_PROVIDER_PATH: '{prefix}'
              I_MPI_OFI_LIBRARY: '{prefix}/lib64/libfabric.so.1'
        libtorch:
          filter:
            exclude_env_vars:
            - CMAKE_PREFIX_PATH
            - PATH
        matlab:
          environment:
            set:
              MW_FEATURE_MathworksServiceHostIsOnByDefault: '0'
        miniconda3:
          filter:
            exclude_env_vars:
            - ACLOCAL_PATH
            - CMAKE_PREFIX_PATH
            - CONDA_EXE
            - CONDA_PYTHON_EXE
            - CONDA_SHLVL
            - LD_LIBRARY_PATH
            - MANPATH
            - NCAR_INC_MINICONDA3
            - NCAR_LDFLAGS_MINICONDA3
            - NCAR_ROOT_MINICONDA3
            - PATH
            - PKG_CONFIG_PATH
            - _CE_CONDA
            - _CE_M
          environment:
            set:
              NCAR_ROOT_CONDA: '{prefix}'
          template: conda.lua
        mpi:
          template: ncar_wrapper_mpi.lua
          environment:
            set:
              NCAR_BUILD_ENV_MPI: derecho-{compiler.name}-{compiler.version}-{name}-{version}
              NCAR_ID_MPI: '{name}-{version}'
              NCAR_ROOT_MPI: '{prefix}'
        ncarcompilers:
          environment:
            set:
              NCAR_EXCLUDE_ASNEEDED: '1'
          template: ncar_wrapper.lua
        nccmp:
          autoload: none
        nco:
          autoload: none
        ncview:
          autoload: none
        neovim:
          template: ncar_neovim.lua
        netcdf:
          autoload: all
        netcdf+mpi:
          template: conflict-mpi.lua
        netcdf~mpi:
          template: conflict-serial.lua
        nvhpc:
          environment:
            set:
              CRAY_NVIDIA_VERSION: '{version}'
              NCAR_BUILD_ENV: derecho-{name}-{version}
              NCAR_BUILD_ENV_COMPILER: derecho-{name}-{version}
              NCAR_ID_COMPILER: '{name}-{version}'
              NCAR_ROOT_COMPILER: '{prefix}'
              NVIDIA_PATH: '{prefix}'
              NVIDIA_VERSION: '{version}'
              PE_ENV: NVIDIA
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/Linux_x86_64/{version}/compilers/lib'
        nvhpc@21.3:
          environment:
            set:
              CRAY_CPU_TARGET: x86-rome
        octave:
          autoload: none
        openmpi:
          environment:
            set:
              FI_LNX_PROV_LINKS: cxi+shm
              FI_PROVIDER: cxi+shm:lnx
              OMPI_MCA_rmaps_default_mapping_policy: :hwtcpus
              OMPI_MCA_shmem_mmap_enable_nfs_warning: '0'
              PRTE_MCA_prte_tmpdir_base: /tmp
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/lib'
        parallel-netcdf:
          environment:
            set:
              PNETCDF: '{prefix}'
        parallelio:
          environment:
            set:
              PIO: '{prefix}'
        parallelio1:
          filter:
            exclude_env_vars:
            - NCAR_INC_PARALLELIO1
            - NCAR_LDFLAGS_PARALLELIO1
            - NCAR_ROOT_PARALLELIO1
            - NCAR_SPACK_HASH_PARALLELIO1
          environment:
            set:
              NCAR_INC_PARALLELIO: '{prefix}/include'
              NCAR_LDFLAGS_PARALLELIO: '{prefix}/lib'
              NCAR_ROOT_PARALLELIO: '{prefix}'
              NCAR_SPACK_HASH_PARALLELIO: '{hash}'
              PIO: '{prefix}'
        projections:
          all: '{name}/{version}'
          fftw+mpi: fftw-mpi/{version}
          netcdf+mpi: netcdf-mpi/{version}
          hdf5+mpi: hdf5-mpi/{version}
          netcdf: netcdf/{version}
          intel-oneapi-advisor: intel-advisor/{version}
          intel-oneapi-compilers@2024: intel-oneapi/{version}
          intel-oneapi-compilers@2025: intel/{version}
          intel-oneapi-inspector: intel-inspector/{version}
          intel-oneapi-mpi: intel-mpi/{version}
          intel-oneapi-mkl: mkl/{version}
          intel-oneapi-vtune: intel-vtune/{version}
          miniconda3: conda/latest
          parallelio1: parallelio/{version}
          parallelio~shared: parallelio/{version}-static
          mvapich~cuda: mvapich/{version}-cpu
          mvapich+cuda: mvapich/{version}-cuda
          py-torch: libtorch/{version}
          libfabric cflags=-g: libfabric/{version}-debug
          esmf%gcc^cray-libsci: esmf/{version}-libsci
        rstudio:
          filter:
            exclude_env_vars:
            - CMAKE_PREFIX_PATH
          environment:
            prepend_path:
              PATH: '{prefix}'
        singularityce:
          environment:
            prepend_path:
              PATH: '{^squashfs.prefix}/bin'
          filter:
            exclude_env_vars:
            - GOPATH
  concretizer:
    unify: false
    reuse: true
    os_compatible:
      opensuse15:
      - sles15
      sles15:
      - opensuse15
