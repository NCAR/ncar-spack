# This is a Spack Environment file.
#
# It describes a set of packages to be installed, along with
# configuration settings.
spack:
  config:
    install_tree:
      root: %INSTALLROOT%
      projections:
        gcc: '{name}/{version}'
        hdf5+threadsafe: '{name}/{version}-safe/{compiler.name}/{compiler.version}'
        netcdf-c^hdf5+threadsafe: '{name}/{version}-safe/{compiler.name}/{compiler.version}'
        eccodes^hdf5+threadsafe: '{name}/{version}-safe/{compiler.name}/{compiler.version}'
        netcdf-c^mpi: 'netcdf/{version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}'
        netcdf-fortran^mpi: 'netcdf/{^netcdf-c.version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}'
        netcdf-cxx4^mpi: 'netcdf/{^netcdf-c.version}/packages/{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}'
        netcdf-c: 'netcdf/{version}/packages/{name}/{version}/{compiler.name}/{compiler.version}'
        netcdf-fortran: 'netcdf/{^netcdf-c.version}/packages/{name}/{version}/{compiler.name}/{compiler.version}'
        netcdf-cxx4: 'netcdf/{^netcdf-c.version}/packages/{name}/{version}/{compiler.name}/{compiler.version}'
        all: '{name}/{version}/{compiler.name}/{compiler.version}'
        ^mpi: '{name}/{version}/{^mpi.name}/{^mpi.version}/{compiler.name}/{compiler.version}'
    build_jobs: 8
    test_stage: %TMPROOT%/$user/temp/spack/%DEPLOYMENT%/tests
    source_cache: %TMPROOT%/$user/temp/spack/cache
    misc_cache: %TMPROOT%/$user/temp/spack/%DEPLOYMENT%/misc
    build_stage:
      - %TMPROOT%/$user/temp/spack/%DEPLOYMENT%/builds
    shared_linking:
      type: rpath
      bind: false
  packages:
    all:
      compiler:: [gcc@10.4.0, gcc, cce, nvhpc, oneapi, intel]
      providers:
        mpi:: [cray-mpich, openmpi]
        szip:: [libszip]
        pkgconfig:: [pkg-config]
        lapack:: [cray-libsci, openblas]
        blas:: [cray-libsci, openblas]
      permissions:
        read: world
        write: user
      target: [zen3]
    libfuse:
      require: ~utils
    openpbs:
      externals:
      - spec: openpbs@2021.1.3
        prefix: /opt/pbs
      buildable: false
    miniconda3:
      externals:
      - spec: miniconda3@4.12.0
        prefix: /glade/u/apps/opt/conda
      buildable: false
    cray-mpich:
      externals:
      - spec: cray-mpich@8.1.24 %gcc
        prefix: /opt/cray/pe/mpich/8.1.24/ofi/gnu/9.1
      - spec: cray-mpich@8.1.24 %cce
        prefix: /opt/cray/pe/mpich/8.1.24/ofi/cray/10.0
      - spec: cray-mpich@8.1.24 %nvhpc
        prefix: /opt/cray/pe/mpich/8.1.24/ofi/nvidia/20.7
      - spec: cray-mpich@8.1.24 %oneapi
        prefix: /opt/cray/pe/mpich/8.1.24/ofi/intel/19.0
      buildable: false
    cray-libsci:
      externals:
      - spec: cray-libsci@23.02.1.1
        modules:
        - cray-libsci/23.02.1.1
      buildable: false
    gcc:
      variants: [+piclibs, 'languages=c,c++,fortran,go']
    cuda:
      require: +allow-unsupported-compilers
    openmpi:
      variants: [+cuda]
      require: 'fabrics=cma,ofi schedulers=tm +gpfs +lustre'
    zstd:
      variants: [+programs]
    git:
      variants: [+svn]
    netcdf:
      variants: [+dap, ~mpi]
    netcdf-c:
      variants: [+dap, ~mpi]
    hdf:
      variants: [+fortran, +szip]
    hdf5:
      require: '@:1.12'
      variants: [+hl, +szip, +fortran, +cxx, ~mpi]
    netcdf-cxx4:
      variants: [~doxygen]
    fftw:
      variants: [~mpi]
    eccodes:
      variants: [+tools, +fortran, +netcdf, +png, jp2k=jasper]
    cdo:
      variants: [+curl]
    singularityce:
      variants: [~suid]
    apptainer:
      variants: [~suid]
    esmf:
      variants: [~mpi]
    ncl:
      variants: [+gdal, +hdf4]
    intel-oneapi-mpi:
      variants: [+external-libfabric, +ilp64]
    intel-oneapi-mkl:
      variants: [+ilp64]
    gdb:
      variants: [+gold, +ld, +lto, +tui, ~python, ~debuginfod]
    curl:
      variants: [+libidn2]
    gdal:
      variants: [+blosc, +curl, +deflate, +expat, +geos, +gif, +grass,
        +grib, +hdf5, +iconv, +jasper, +jpeg, +libcsf, +liblzma, +lz4, +netcdf, +pcidsk,
        +png, +qhull, +sqlite3, +zstd]
    arpack-ng:
      variants: [~mpi]
  view:
    baseenv:
      root: %VIEWROOT%
      link_type: symlink
      link: roots
      select:
        - tmux
  compilers:
    - compiler:
        paths:
          cc: /usr/bin/gcc
          cxx: /usr/bin/g++
          f77: /usr/bin/gfortran
          fc: /usr/bin/gfortran
        operating_system: sles15
        target: x86_64
        spec: gcc@7.5.0
        modules: []
    - compiler:
        spec: intel@2021.8.0
        paths:
          cc: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/intel64/icc
          cxx: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/intel64/icpc
          f77: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/intel64/ifort
          fc: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/intel64/ifort
        operating_system: sles15
        target: x86_64
        modules: []
        environment:
          prepend_path:
            LD_LIBRARY_PATH: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/compiler/lib/intel64
          append_path:
            LD_LIBRARY_PATH: /opt/cray/libfabric/1.15.0.0/lib64
    - compiler:
        spec: oneapi@2023.0.0
        paths:
          cc: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/icx
          cxx: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/icpx
          f77: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/ifx
          fc: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/bin/ifx
        operating_system: sles15
        target: x86_64
        modules: []
        environment:
          prepend_path:
            LD_LIBRARY_PATH: /glade/u/apps/common/22.12/spack/opt/spack/intel-oneapi-compilers/2023.0.0/compiler/latest/linux/compiler/lib/intel64
          append_path:
            LD_LIBRARY_PATH: /opt/cray/libfabric/1.15.0.0/lib64
    - compiler:
        spec: nvhpc@23.1
        paths:
          cc: /glade/u/apps/common/22.12/spack/opt/spack/nvhpc/23.1/Linux_x86_64/23.1/compilers/bin/nvc
          cxx: /glade/u/apps/common/22.12/spack/opt/spack/nvhpc/23.1/Linux_x86_64/23.1/compilers/bin/nvc++
          f77: /glade/u/apps/common/22.12/spack/opt/spack/nvhpc/23.1/Linux_x86_64/23.1/compilers/bin/nvfortran
          fc: /glade/u/apps/common/22.12/spack/opt/spack/nvhpc/23.1/Linux_x86_64/23.1/compilers/bin/nvfortran
        operating_system: sles15
        target: x86_64
        modules: []
        environment:
          prepend_path:
            LD_LIBRARY_PATH: /glade/u/apps/common/22.12/spack/opt/spack/nvhpc/23.1/Linux_x86_64/23.1/compilers/lib
          append_path:
            LD_LIBRARY_PATH: /opt/cray/libfabric/1.15.0.0/lib64
    - compiler:
        spec: cce@15.0.1
        paths:
          cc: cc
          cxx: CC
          f77: ftn
          fc: ftn
        operating_system: sles15
        target: any
        modules:
        - craype
        - cce/15.0.1
        environment:
          set:
            PE_ENV: CRAY
          append_path:
            LD_LIBRARY_PATH: /opt/cray/libfabric/1.15.0.0/lib64
    - compiler:
        spec: gcc@12.2.0
        paths:
          cc: cc
          cxx: CC
          f77: ftn
          fc: ftn
        operating_system: sles15
        target: any
        modules:
        - craype
        - gcc/12.2.0
        environment:
          set:
            PE_ENV: GNU
          append_path:
            LD_LIBRARY_PATH: /opt/cray/libfabric/1.15.0.0/lib64
  modules:
    default::
      roots:
        lmod: %MODULESROOT%
      arch_folder: false
      enable::
        - lmod
      prefix_inspections:
        bin:
        - PATH
        lib:
        - NCAR_LDFLAGS_{name}
        lib64:
        - NCAR_LDFLAGS_{name}64
        include:
        - NCAR_INC_{name}
        man:
        - MANPATH
        share/man:
        - MANPATH
        lib/pkgconfig:
        - PKG_CONFIG_PATH
        lib64/pkgconfig:
        - PKG_CONFIG_PATH
      lmod:
        hierarchy:
          - mpi
        hash_length: 0
        exclude_implicits: true
        exclude:
          - lmod
          - netcdf-c
          - netcdf-fortran
          - netcdf-cxx4
          - cray-mpich
          - cray-libsci
          - cray-fftw
        include:
          - git
        all:
          environment:
            set:
              NCAR_ROOT_{name}: '{prefix}'
              NCAR_SPACK_HASH_{name}: '{hash}'
          template: ncar_default.lua
        mpi:
          template: ncar_wrapper_mpi.lua
          environment:
            set:
              NCAR_ID_MPI: '{name}-{version}'
              NCAR_BUILD_ENV_MPI: %HOST%-{compiler.name}-{compiler.version}-{name}-{version}
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/{name}/{version}/{compiler.name}/{compiler.version}
        gcc:
          environment:
        all:
          environment:
            set:
              NCAR_ROOT_{name}: '{prefix}'
              NCAR_SPACK_HASH_{name}: '{hash}'
          template: ncar_default.lua
        mpi:
          template: ncar_wrapper_mpi.lua
          environment:
            set:
              NCAR_ID_MPI: '{name}-{version}'
              NCAR_BUILD_ENV_MPI: %HOST%-{compiler.name}-{compiler.version}-{name}-{version}
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/{name}/{version}/{compiler.name}/{compiler.version}
        gcc:
          environment:
            set:
              NCAR_ID_COMPILER: '{name}-{version}'
              NCAR_BUILD_ENV_COMPILER: %HOST%-{name}-{version}
              NCAR_BUILD_ENV: %HOST%-{name}-{version}
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/{name}/{version}
        intel-oneapi-compilers:
          filter:
            exclude_env_vars: [NCAR_ROOT_INTEL_ONEAPI_COMPILERS, NCAR_SPACK_HASH_INTEL_ONEAPI_COMPILERS]
          environment:
            set:
              PE_ENV: INTEL
              INTEL_VERSION: '{version}'
              INTEL_PATH: '{prefix}'
              INTEL_COMPILER_TYPE: ONEAPI
              NCAR_ROOT_ONEAPI: '{prefix}'
              NCAR_SPACK_HASH_ONEAPI: '{hash}'
              NCAR_ID_COMPILER: oneapi-{version}
              NCAR_BUILD_ENV_COMPILER: %HOST%-oneapi-{version}
              NCAR_BUILD_ENV: %HOST%-oneapi-{version}
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/oneapi/{version}
        intel-oneapi-compilers-classic:
          autoload: none
          filter:
            exclude_env_vars: [NCAR_ROOT_INTEL_ONEAPI_COMPILERS_CLASSIC, CMAKE_PREFIX_PATH,
              NCAR_SPACK_HASH_INTEL_ONEAPI_COMPILERS_CLASSIC]
          environment:
            set:
              PE_ENV: INTEL
              INTEL_VERSION: '{version}'
              INTEL_PATH: '{^intel-oneapi-compilers.prefix}'
              INTEL_COMPILER_TYPE: CLASSIC
              NCAR_ROOT_INTEL: '{^intel-oneapi-compilers.prefix}'
              NCAR_SPACK_HASH_INTEL: '{hash}'
              NCAR_ID_COMPILER: intel-{^intel-oneapi-compilers.version}
              NCAR_BUILD_ENV_COMPILER: %HOST%-intel-{^intel-oneapi-compilers.version}
              NCAR_BUILD_ENV: %HOST%-intel-{^intel-oneapi-compilers.version}
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/oneapi/{version}
        intel-oneapi-mkl:
          filter:
            exclude_env_vars: [NCAR_ROOT_INTEL_ONEAPI_MKL, NCAR_LDFLAGS_INTEL_ONEAPI_MKL,
              NCAR_SPACK_HASH_INTEL_ONEAPI_MKL]
          environment:
            set:
              NCAR_ROOT_MKL: '{prefix}/mkl/{version}'
              NCAR_LDFLAGS_MKL: '{prefix}/mkl/{version}/lib/intel64'
              NCAR_SPACK_HASH_MKL: '{hash}'
        intel-oneapi-mpi:
          filter:
            exclude_env_vars: [NCAR_ROOT_INTEL_ONEAPI_MPI, NCAR_SPACK_HASH_INTEL_ONEAPI_MPI]
          environment:
            set:
              NCAR_ROOT_IMPI: '{prefix}'
              NCAR_SPACK_HASH_IMPI: '{hash}'
        nvhpc:
          environment:
            set:
              PE_ENV: NVIDIA
              NVIDIA_VERSION: '{version}'
              NVIDIA_PATH: '{prefix}'
              CRAY_NVIDIA_VERSION: '{version}'
              NCAR_ID_COMPILER: '{name}-{version}'
              NCAR_BUILD_ENV_COMPILER: %HOST%-{name}-{version}
              NCAR_BUILD_ENV: %HOST%-{name}-{version}
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/Linux_x86_64/{version}/compilers/lib'
            append_path:
              MODULEPATH: /glade/u/apps/cseg/modules/%VERSION%/{name}/{version}
        ncarcompilers:
          environment:
            set:
              NCAR_EXCLUDE_ASNEEDED: '1'
          template: ncar_wrapper.lua
        netcdf:
          autoload: all
        parallel-netcdf:
          filter:
            exclude_env_vars: [NCAR_ROOT_PARALLEL_NETCDF]
          environment:
            set:
              NCAR_ROOT_PNETCDF: '{prefix}'
              PNETCDF: '{prefix}'
        cuda:
          environment:
            set:
              NVHPC_CUDA_HOME: '{prefix}'
              CRAY_ACCEL_TARGET: nvidia80
              CRAY_TCMALLOC_MEMFS_FORCE: '1'
              CRAYPE_LINK_TYPE: dynamic
              CRAY_ACCEL_VENDOR: nvidia
              CRAY_CUDATOOLKIT_VERSION: '{version}'
              CRAY_CUDATOOLKIT_PREFIX: '{prefix}'
              CRAY_CUDATOOLKIT_DIR: '{prefix}'
              CUDATOOLKIT_HOME: '{prefix}'
              NCAR_LIBS_CRAYGTL: -lstdc++
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/lib64:{prefix}/nvvm/lib64:{prefix}/extras/CUPTI/lib64:{prefix}/extras/Debugger/lib64'
              CRAY_LD_LIBRARY_PATH: '{prefix}/lib64'
        cudnn:
          environment:
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/lib'
        openmpi:
          environment:
            set:
              OMPI_MCA_shmem_mmap_enable_nfs_warning: '0'
            prepend_path:
              LD_LIBRARY_PATH: '{prefix}/lib'
        miniconda3:
          filter:
            exclude_env_vars: [PATH, LD_LIBRARY_PATH, NCAR_LDFLAGS_MINICONDA3, NCAR_INC_MINICONDA3,
              NCAR_ROOT_MINICONDA3, ACLOCAL_PATH, PKG_CONFIG_PATH, CMAKE_PREFIX_PATH,
              CONDA_SHLVL, _CE_CONDA, _CE_M, MANPATH]
          environment:
            set:
              NCAR_ROOT_CONDA: '{prefix}'
              CONDA_ROOT: '{prefix}'
              CONDA_EXE: '{prefix}/bin/conda'
          template: conda.lua
        apptainer:
          environment:
            prepend_path:
              PATH: '{^squashfs.prefix}/bin'
          filter:
            exclude_env_vars: [GOPATH]
        singularityce:
          environment:
            prepend_path:
              PATH: '{^squashfs.prefix}/bin'
          filter:
            exclude_env_vars: [GOPATH]
        ncarenv:
          template: ncar_env.lua
        netcdf~mpi:
          template: conflict-serial.lua
        netcdf+mpi:
          template: conflict-mpi.lua
        hdf5~mpi:
          template: conflict-serial.lua
        hdf5+mpi:
          template: conflict-mpi.lua
        fftw~mpi:
          template: conflict-serial.lua
        fftw+mpi:
          template: conflict-mpi.lua
        esmf~mpi:
          template: conflict-serial.lua
        esmf+mpi:
          template: conflict-mpi.lua
        projections:
          all: '{name}/{version}'
          fftw+mpi: fftw-mpi/{version}
          netcdf+mpi: netcdf-mpi/{version}
          hdf5+mpi: hdf5-mpi/{version}
          netcdf: netcdf/{version}
          intel-oneapi-compilers: intel-oneapi/{version}
          intel-oneapi-compilers-classic: intel-classic/{^intel-oneapi-compilers.version}
          intel-oneapi-mpi: impi/{version}
          intel-oneapi-mkl: mkl/{version}
          miniconda3: conda/latest
          esmf+mpi: esmf-mpi/{version}
        core_compilers:
        - gcc@10.4.0
        core_specs:
        - cuda
        - r
        - cmake
        - git
        - nco
        - cdo
        - wgrib2
        - ncview
        defaults:
        - netcdf@4.9.1
        - parallel-netcdf@1.12.3
        - fftw@3.3.10
        - openmpi@4.1.5
        - nvhpc@23.1
