#!/bin/bash

function usage {
cat << EOF
Usage: $0 [-m MIRRORPATH]

Options
    -m, --mirror    specify a custom path to a mirror

EOF
exit
}

while [[ $# -gt 0 ]]; do
    case $1 in
        -m|--mirror)
            NCAR_SPACK_MIRROR_PATH=$2
            shift
            ;;
        -h|--help)
            usage
            exit
            ;;
        *)
            >&2 echo "Error: unrecognized option $1"
            usage
            exit 1
            ;;
    esac

    shift
done

# Perform common script setup including environment checks
export my_dir="$( cd "$(dirname "$0")" ; pwd )"
. $my_dir/tools/init.sh

log_dir=$SPACK_ENV/logs
mkdir -p $log_dir
log_file=$log_dir/cache.$start_time
cache_cmd="spack buildcache create -a"

if [[ $NCAR_SPACK_DEPLOY_TYPE == production ]]; then
    NCAR_SPACK_MIRROR_PATH=${NCAR_SPACK_MIRROR_PATH:-$NCAR_SPACK_MIRROR_GLOBAL}
else
    NCAR_SPACK_MIRROR_PATH=${NCAR_SPACK_MIRROR_PATH:-$NCAR_SPACK_MIRROR_LOCAL}
fi

pkglist=$(spack find -L -p | awk -v envpath=${SPACK_ENV}/opt '$3~envpath { print $1 }')
cachelist=$(ls $NCAR_SPACK_MIRROR_PATH/build_cache/ 2> /dev/null || true)

for pkg in $pkglist; do
    if [[ $cachelist != *$pkg* ]]; then
        use_cache=$(awk -F: -v spec_hash="$pkg" '$2 == spec_hash {print $3}' .installs)

        if [[ $use_cache != no ]]; then
            pkg_label=$(spack find --no-groups -f --show-full-compiler -v /$pkg | tail -n1)
            tsecho "Caching package:  ${GCOL}$pkg_label${DCOL}"
            log_cmd "$cache_cmd -d $NCAR_SPACK_MIRROR_PATH --only=package /$pkg" >> $log_file
            $cache_cmd -d $NCAR_SPACK_MIRROR_PATH --only=package /$pkg &>> $log_file
        else
            tsecho "Skipping package: ${PCOL}$pkg_label${DCOL} (use_cache=no)"
        fi
    fi
done
